-- phpMyAdmin SQL Dump
-- version 3.3.9
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generato il: 27 nov, 2011 at 06:54 
-- Versione MySQL: 5.5.8
-- Versione PHP: 5.3.5

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- Database: `sourcebox`
--

-- --------------------------------------------------------

--
-- Struttura della tabella `boxes`
--

CREATE TABLE IF NOT EXISTS `boxes` (
  `idboxes` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `creation` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `alias` varchar(45) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  `language` varchar(45) DEFAULT NULL,
  `lastvisit` timestamp NULL DEFAULT NULL,
  `readonly` int(11) DEFAULT NULL,
  `password` varchar(60) DEFAULT '',
  `lastevent` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`idboxes`),
  KEY `aliasIndex` (`alias`),
  KEY `lasteventIndex` (`lastevent`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=326 ;

--
-- Dump dei dati per la tabella `boxes`
--

INSERT INTO `boxes` (`idboxes`, `creation`, `alias`, `language`, `lastvisit`, `readonly`, `password`, `lastevent`) VALUES
(1, '2011-10-26 22:30:13', 'abc', NULL, NULL, NULL, NULL, NULL),
(2, '2011-11-08 19:30:45', 'dfdf', 'bla', NULL, NULL, NULL, NULL),
(4, '2011-11-08 19:33:20', '1320777200369', 'bla', NULL, NULL, NULL, NULL),
(5, '2011-11-08 19:33:21', '1320777201640', 'bla', NULL, NULL, NULL, NULL),
(6, '2011-11-08 19:33:22', '1320777202146', 'bla', NULL, NULL, NULL, NULL),
(7, '2011-11-08 19:34:58', '1320777298952', 'bla', NULL, NULL, NULL, NULL),
(8, '2011-11-08 19:34:59', '1320777299858', 'bla', NULL, NULL, NULL, NULL),
(9, '2011-11-08 19:35:00', '1320777300689', 'bla', NULL, NULL, NULL, NULL),
(10, '2011-11-08 19:35:30', '1320777330194', 'bla', NULL, NULL, NULL, NULL),
(11, '2011-11-08 19:35:31', '1320777331055', 'bla', NULL, NULL, NULL, NULL),
(12, '2011-11-08 19:35:31', '1320777331689', 'bla', NULL, NULL, NULL, NULL),
(13, '2011-11-08 19:36:13', '1320777373724', 'bla', NULL, NULL, NULL, NULL),
(14, '2011-11-08 22:40:56', '1320788455626', 'bla', NULL, NULL, NULL, NULL),
(16, '2011-11-08 23:08:27', '1320790107927', 'bla', NULL, NULL, NULL, NULL),
(17, '2011-11-08 23:08:43', '1320790123595', 'bla', NULL, NULL, NULL, NULL),
(18, '2011-11-08 23:08:44', '1320790124103', 'bla', NULL, NULL, NULL, NULL),
(19, '2011-11-08 23:08:44', '1320790124859', 'bla', NULL, NULL, NULL, NULL),
(20, '2011-11-08 23:08:57', '1320790137377', 'bla', NULL, NULL, NULL, NULL),
(21, '2011-11-08 23:08:59', '1320790139829', 'bla', NULL, NULL, NULL, NULL),
(22, '2011-11-08 23:09:02', '1320790142501', 'bla', NULL, NULL, NULL, NULL),
(23, '2011-11-08 23:13:32', '1320790412268', 'bla', NULL, NULL, NULL, NULL),
(24, '2011-11-08 23:14:28', '1320790468439', 'bla', NULL, NULL, NULL, NULL),
(25, '2011-11-08 23:33:36', '1320791616070', 'bla', NULL, NULL, NULL, NULL),
(26, '2011-11-08 23:33:40', '1320791620920', 'bla', NULL, NULL, NULL, NULL),
(27, '2011-11-08 23:33:42', '1320791622616', 'bla', NULL, NULL, NULL, NULL),
(28, '2011-11-08 23:33:43', '1320791623293', 'bla', NULL, NULL, NULL, NULL),
(29, '2011-11-08 23:33:44', '1320791624799', 'bla', NULL, NULL, NULL, NULL),
(30, '2011-11-08 23:33:48', '1320791628521', 'bla', NULL, NULL, NULL, NULL),
(31, '2011-11-09 16:35:25', '1320852924845', 'bla', NULL, NULL, NULL, NULL),
(32, '2011-11-09 16:35:34', '1320852934050', 'bla', NULL, NULL, NULL, NULL),
(33, '2011-11-09 16:36:47', '1320853007844', 'bla', NULL, NULL, NULL, NULL),
(34, '2011-11-09 16:36:48', '1320853008976', 'bla', NULL, NULL, NULL, NULL),
(35, '2011-11-09 16:36:50', '1320853009999', 'bla', NULL, NULL, NULL, NULL),
(36, '2011-11-09 16:36:50', '1320853010791', 'bla', NULL, NULL, NULL, NULL),
(37, '2011-11-09 16:36:54', '1320853014843', 'bla', NULL, NULL, NULL, NULL),
(38, '2011-11-09 16:36:55', '1320853015529', 'bla', NULL, NULL, NULL, NULL),
(39, '2011-11-09 16:36:56', '1320853016045', 'bla', NULL, NULL, NULL, NULL),
(40, '2011-11-09 16:36:56', '1320853016607', 'bla', NULL, NULL, NULL, NULL),
(41, '2011-11-09 16:36:57', '1320853017136', 'bla', NULL, NULL, NULL, NULL),
(42, '2011-11-09 16:36:57', '1320853017650', 'bla', NULL, NULL, NULL, NULL),
(43, '2011-11-09 16:38:09', '1320853089555', 'bla', NULL, NULL, NULL, NULL),
(44, '2011-11-09 16:38:11', '1320853091522', 'bla', NULL, NULL, NULL, NULL),
(45, '2011-11-09 16:38:13', '1320853093530', 'bla', NULL, NULL, NULL, NULL),
(46, '2011-11-09 16:38:15', '1320853095507', 'bla', NULL, NULL, NULL, NULL),
(47, '2011-11-09 16:41:45', '1320853305197', 'bla', NULL, NULL, NULL, NULL),
(48, '2011-11-09 16:41:47', '1320853307538', 'bla', NULL, NULL, NULL, NULL),
(49, '2011-11-09 16:41:48', '1320853308370', 'bla', NULL, NULL, NULL, NULL),
(50, '2011-11-09 16:41:49', '1320853309075', 'bla', NULL, NULL, NULL, NULL),
(51, '2011-11-09 16:41:49', '1320853309868', 'bla', NULL, NULL, NULL, NULL),
(52, '2011-11-09 16:41:50', '1320853310641', 'bla', NULL, NULL, NULL, NULL),
(53, '2011-11-09 16:41:51', '1320853311436', 'bla', NULL, NULL, NULL, NULL),
(54, '2011-11-09 16:41:52', '1320853312225', 'bla', NULL, NULL, NULL, NULL),
(55, '2011-11-09 16:41:52', '1320853312976', 'bla', NULL, NULL, NULL, NULL),
(56, '2011-11-09 16:41:53', '1320853313596', 'bla', NULL, NULL, NULL, NULL),
(57, '2011-11-09 16:41:54', '1320853314167', 'bla', NULL, NULL, NULL, NULL),
(58, '2011-11-09 16:41:54', '1320853314742', 'bla', NULL, NULL, NULL, NULL),
(59, '2011-11-09 16:41:55', '1320853315340', 'bla', NULL, NULL, NULL, NULL),
(60, '2011-11-09 16:41:56', '1320853316027', 'bla', NULL, NULL, NULL, NULL),
(61, '2011-11-09 16:41:56', '1320853316577', 'bla', NULL, NULL, NULL, NULL),
(62, '2011-11-09 16:41:57', '1320853317130', 'bla', NULL, NULL, NULL, NULL),
(63, '2011-11-09 16:41:57', '1320853317733', 'bla', NULL, NULL, NULL, NULL),
(64, '2011-11-09 16:41:58', '1320853318320', 'bla', NULL, NULL, NULL, NULL),
(65, '2011-11-09 16:41:58', '1320853318870', 'bla', NULL, NULL, NULL, NULL),
(66, '2011-11-09 16:41:59', '1320853319418', 'bla', NULL, NULL, NULL, NULL),
(67, '2011-11-09 16:42:00', '1320853320004', 'bla', NULL, NULL, NULL, NULL),
(68, '2011-11-09 16:42:00', '1320853320563', 'bla', NULL, NULL, NULL, NULL),
(69, '2011-11-09 16:42:01', '1320853321158', 'bla', NULL, NULL, NULL, NULL),
(70, '2011-11-09 16:42:01', '1320853321843', 'bla', NULL, NULL, NULL, NULL),
(71, '2011-11-09 16:42:02', '1320853322586', 'bla', NULL, NULL, NULL, NULL),
(72, '2011-11-09 16:42:06', '1320853326006', 'bla', NULL, NULL, NULL, NULL),
(73, '2011-11-09 16:42:06', '1320853326616', 'bla', NULL, NULL, NULL, NULL),
(74, '2011-11-09 16:42:07', '1320853327218', 'bla', NULL, NULL, NULL, NULL),
(75, '2011-11-09 16:42:07', '1320853327778', 'bla', NULL, NULL, NULL, NULL),
(76, '2011-11-09 16:42:08', '1320853328239', 'bla', NULL, NULL, NULL, NULL),
(77, '2011-11-09 16:42:08', '1320853328691', 'bla', NULL, NULL, NULL, NULL),
(78, '2011-11-09 16:42:09', '1320853329225', 'bla', NULL, NULL, NULL, NULL),
(79, '2011-11-09 16:42:09', '1320853329246', 'bla', NULL, NULL, NULL, NULL),
(80, '2011-11-09 16:42:09', '1320853329722', 'bla', NULL, NULL, NULL, NULL),
(81, '2011-11-09 16:42:10', '1320853330294', 'bla', NULL, NULL, NULL, NULL),
(82, '2011-11-09 16:42:10', '1320853330839', 'bla', NULL, NULL, NULL, NULL),
(83, '2011-11-09 16:42:11', '1320853331364', 'bla', NULL, NULL, NULL, NULL),
(84, '2011-11-09 16:42:11', '1320853331884', 'bla', NULL, NULL, NULL, NULL),
(85, '2011-11-09 16:42:12', '1320853332378', 'bla', NULL, NULL, NULL, NULL),
(86, '2011-11-09 16:42:12', '1320853332896', 'bla', NULL, NULL, NULL, NULL),
(87, '2011-11-09 16:42:13', '1320853333289', 'bla', NULL, NULL, NULL, NULL),
(88, '2011-11-09 16:42:13', '1320853333602', 'bla', NULL, NULL, NULL, NULL),
(89, '2011-11-09 16:42:13', '1320853333898', 'bla', NULL, NULL, NULL, NULL),
(90, '2011-11-09 16:42:14', '1320853334186', 'bla', NULL, NULL, NULL, NULL),
(91, '2011-11-09 16:42:14', '1320853334466', 'bla', NULL, NULL, NULL, NULL),
(92, '2011-11-09 16:42:14', '1320853334737', 'bla', NULL, NULL, NULL, NULL),
(93, '2011-11-09 16:42:15', '1320853335018', 'bla', NULL, NULL, NULL, NULL),
(94, '2011-11-09 16:42:15', '1320853335047', 'bla', NULL, NULL, NULL, NULL),
(95, '2011-11-09 16:42:15', '1320853335295', 'bla', NULL, NULL, NULL, NULL),
(96, '2011-11-09 16:42:15', '1320853335580', 'bla', NULL, NULL, NULL, NULL),
(97, '2011-11-09 16:42:15', '1320853335854', 'bla', NULL, NULL, NULL, NULL),
(98, '2011-11-09 16:42:16', '1320853336134', 'bla', NULL, NULL, NULL, NULL),
(99, '2011-11-09 16:42:16', '1320853336387', 'bla', NULL, NULL, NULL, NULL),
(100, '2011-11-09 16:42:16', '1320853336694', 'bla', NULL, NULL, NULL, NULL),
(101, '2011-11-09 16:42:16', '1320853336966', 'bla', NULL, NULL, NULL, NULL),
(102, '2011-11-09 16:42:18', '1320853338437', 'bla', NULL, NULL, NULL, NULL),
(103, '2011-11-09 16:42:19', '1320853339496', 'bla', NULL, NULL, NULL, NULL),
(104, '2011-11-09 16:42:20', '1320853340322', 'bla', NULL, NULL, NULL, NULL),
(105, '2011-11-09 16:42:21', '1320853341858', 'bla', NULL, NULL, NULL, NULL),
(106, '2011-11-09 16:42:23', '1320853343171', 'bla', NULL, NULL, NULL, NULL),
(107, '2011-11-09 16:42:24', '1320853344009', 'bla', NULL, NULL, NULL, NULL),
(108, '2011-11-09 16:42:25', '1320853345071', 'bla', NULL, NULL, NULL, NULL),
(109, '2011-11-09 16:42:25', '1320853345695', 'bla', NULL, NULL, NULL, NULL),
(110, '2011-11-09 16:42:26', '1320853346660', 'bla', NULL, NULL, NULL, NULL),
(111, '2011-11-09 16:42:28', '1320853348219', 'bla', NULL, NULL, NULL, NULL),
(112, '2011-11-09 16:42:37', '1320853357750', 'bla', NULL, NULL, NULL, NULL),
(113, '2011-11-09 16:42:38', '1320853358595', 'bla', NULL, NULL, NULL, NULL),
(114, '2011-11-09 16:42:39', '1320853359234', 'bla', NULL, NULL, NULL, NULL),
(115, '2011-11-09 16:43:22', '1320853402913', 'bla', NULL, NULL, NULL, NULL),
(116, '2011-11-09 16:46:04', '1320853564612', 'bla', NULL, NULL, NULL, NULL),
(117, '2011-11-09 16:46:05', '1320853565306', 'bla', NULL, NULL, NULL, NULL),
(118, '2011-11-09 16:46:05', '1320853565913', 'bla', NULL, NULL, NULL, NULL),
(119, '2011-11-09 16:46:06', '1320853566500', 'bla', NULL, NULL, NULL, NULL),
(120, '2011-11-09 16:46:07', '1320853567074', 'bla', NULL, NULL, NULL, NULL),
(121, '2011-11-09 16:46:07', '1320853567663', 'bla', NULL, NULL, NULL, NULL),
(122, '2011-11-09 16:46:08', '1320853568389', 'bla', NULL, NULL, NULL, NULL),
(123, '2011-11-09 16:46:09', '1320853569669', 'bla', NULL, NULL, NULL, NULL),
(124, '2011-11-09 16:46:27', '1320853587712', 'bla', NULL, NULL, NULL, NULL),
(125, '2011-11-09 16:46:28', '1320853588289', 'bla', NULL, NULL, NULL, NULL),
(126, '2011-11-09 16:46:28', '1320853588917', 'bla', NULL, NULL, NULL, NULL),
(127, '2011-11-09 16:46:29', '1320853589515', 'bla', NULL, NULL, NULL, NULL),
(128, '2011-11-09 17:04:13', '1320854653533', 'bla', NULL, NULL, NULL, NULL),
(129, '2011-11-09 17:04:14', '1320854654477', 'bla', NULL, NULL, NULL, NULL),
(130, '2011-11-09 17:04:15', '1320854655432', 'bla', NULL, NULL, NULL, NULL),
(131, '2011-11-09 17:08:56', '1320854936871', 'bla', NULL, NULL, NULL, NULL),
(132, '2011-11-09 17:08:57', '1320854937685', 'bla', NULL, NULL, NULL, NULL),
(133, '2011-11-09 17:08:58', '1320854938369', 'bla', NULL, NULL, NULL, NULL),
(134, '2011-11-09 17:08:59', '1320854939087', 'bla', NULL, NULL, NULL, NULL),
(135, '2011-11-09 17:08:59', '1320854939798', 'bla', NULL, NULL, NULL, NULL),
(136, '2011-11-09 17:09:02', '1320854942028', 'bla', NULL, NULL, NULL, NULL),
(137, '2011-11-09 17:09:03', '1320854943004', 'bla', NULL, NULL, NULL, NULL),
(138, '2011-11-09 17:09:03', '1320854943975', 'bla', NULL, NULL, NULL, NULL),
(139, '2011-11-09 17:09:04', '1320854944872', 'bla', NULL, NULL, NULL, NULL),
(140, '2011-11-09 17:09:06', '1320854946713', 'bla', NULL, NULL, NULL, NULL),
(141, '2011-11-09 17:09:08', '1320854948228', 'bla', NULL, NULL, NULL, NULL),
(142, '2011-11-09 17:09:15', '1320854955536', 'bla', NULL, NULL, NULL, NULL),
(143, '2011-11-09 17:15:48', '1320855348883', 'bla', NULL, NULL, NULL, NULL),
(144, '2011-11-09 17:15:49', '1320855349907', 'bla', NULL, NULL, NULL, NULL),
(145, '2011-11-09 17:15:50', '1320855350734', 'bla', NULL, NULL, NULL, NULL),
(146, '2011-11-09 17:15:51', '1320855351501', 'bla', NULL, NULL, NULL, NULL),
(147, '2011-11-09 17:15:52', '1320855352251', 'bla', NULL, NULL, NULL, NULL),
(148, '2011-11-09 17:15:52', '1320855352979', 'bla', NULL, NULL, NULL, NULL),
(149, '2011-11-09 17:15:53', '1320855353522', 'bla', NULL, NULL, NULL, NULL),
(150, '2011-11-09 17:15:54', '1320855354085', 'bla', NULL, NULL, NULL, NULL),
(151, '2011-11-09 17:15:54', '1320855354597', 'bla', NULL, NULL, NULL, NULL),
(152, '2011-11-09 17:15:55', '1320855355224', 'bla', NULL, NULL, NULL, NULL),
(153, '2011-11-09 17:15:55', '1320855355881', 'bla', NULL, NULL, NULL, NULL),
(154, '2011-11-09 17:15:58', '1320855358812', 'bla', NULL, NULL, NULL, NULL),
(155, '2011-11-09 17:15:59', '1320855359457', 'bla', NULL, NULL, NULL, NULL),
(156, '2011-11-09 17:16:00', '1320855360097', 'bla', NULL, NULL, NULL, NULL),
(157, '2011-11-09 17:16:00', '1320855360706', 'bla', NULL, NULL, NULL, NULL),
(158, '2011-11-09 17:16:01', '1320855361241', 'bla', NULL, NULL, NULL, NULL),
(159, '2011-11-09 17:18:11', 'A7', 'bla', NULL, NULL, NULL, NULL),
(160, '2011-11-09 17:18:13', 'AK', 'bla', NULL, NULL, NULL, NULL),
(161, '2011-11-09 17:18:13', 'Ag', 'bla', NULL, NULL, NULL, NULL),
(162, '2011-11-09 17:18:14', 'Aw', 'bla', NULL, NULL, NULL, NULL),
(163, '2011-11-09 17:23:25', 'Ac', 'bla', NULL, NULL, NULL, NULL),
(164, '2011-11-09 17:23:27', 'AY', 'bla', NULL, NULL, NULL, NULL),
(165, '2011-11-09 17:23:27', 'AF', 'bla', NULL, NULL, NULL, NULL),
(166, '2011-11-09 17:23:28', 'AJ', 'bla', NULL, NULL, NULL, NULL),
(167, '2011-11-09 17:24:05', 'A3', 'bla', NULL, NULL, NULL, NULL),
(168, '2011-11-09 17:24:05', 'A4', 'bla', NULL, NULL, NULL, NULL),
(170, '2011-11-09 17:24:06', 'AB', 'bla', NULL, NULL, NULL, NULL),
(171, '2011-11-09 17:24:06', 'AN', 'bla', NULL, NULL, NULL, NULL),
(173, '2011-11-09 17:24:31', 'A8', 'bla', NULL, NULL, NULL, NULL),
(174, '2011-11-09 17:24:32', 'AU', 'bla', NULL, NULL, NULL, NULL),
(175, '2011-11-09 17:24:33', 'AV', 'bla', NULL, NULL, NULL, NULL),
(176, '2011-11-09 17:24:33', 'A6', 'bla', NULL, NULL, NULL, NULL),
(180, '2011-11-09 17:28:18', 'AQ', 'bla', NULL, NULL, NULL, NULL),
(181, '2011-11-09 17:28:19', 'AH', 'bla', NULL, NULL, NULL, NULL),
(182, '2011-11-09 17:28:19', 'Ad', 'bla', NULL, NULL, NULL, NULL),
(183, '2011-11-09 17:28:20', 'A1', 'bla', NULL, NULL, NULL, NULL),
(184, '2011-11-09 17:28:20', 'At', 'bla', NULL, NULL, NULL, NULL),
(185, '2011-11-09 17:28:20', 'AR', 'bla', NULL, NULL, NULL, NULL),
(186, '2011-11-09 17:28:20', 'lT', 'bla', NULL, NULL, NULL, NULL),
(187, '2011-11-09 17:28:20', 'lp', 'bla', NULL, NULL, NULL, NULL),
(188, '2011-11-09 17:28:21', 'lA', 'bla', NULL, NULL, NULL, NULL),
(189, '2011-11-09 17:28:21', 'll', 'bla', NULL, NULL, NULL, NULL),
(190, '2011-11-09 17:28:21', 'lD', 'bla', NULL, NULL, NULL, NULL),
(191, '2011-11-09 17:28:21', 'lx', 'bla', NULL, NULL, NULL, NULL),
(192, '2011-11-09 17:28:21', 'lW', 'bla', NULL, NULL, NULL, NULL),
(193, '2011-11-09 17:28:21', 'li', 'bla', NULL, NULL, NULL, NULL),
(194, '2011-11-09 17:28:22', 'lO', 'bla', NULL, NULL, NULL, NULL),
(195, '2011-11-09 17:28:22', 'lC', 'bla', NULL, NULL, NULL, NULL),
(197, '2011-11-09 17:28:22', 'lk', 'bla', NULL, NULL, NULL, NULL),
(198, '2011-11-09 17:28:22', 'l5', 'bla', NULL, NULL, NULL, NULL),
(199, '2011-11-09 17:28:23', 'l9', 'bla', NULL, NULL, NULL, NULL),
(200, '2011-11-09 17:28:23', 'lm', 'bla', NULL, NULL, NULL, NULL),
(201, '2011-11-09 17:28:24', 'lS', 'bla', NULL, NULL, NULL, NULL),
(202, '2011-11-09 17:28:24', 'le', 'bla', NULL, NULL, NULL, NULL),
(204, '2011-11-09 17:28:24', 'l2', 'bla', NULL, NULL, NULL, NULL),
(207, '2011-11-09 17:29:10', 'lz', 'bla', NULL, NULL, NULL, NULL),
(209, '2011-11-09 17:30:04', 'lj', 'bla', NULL, NULL, NULL, NULL),
(211, '2011-11-09 17:30:06', 'lb', 'bla', NULL, NULL, NULL, NULL),
(212, '2011-11-09 17:30:07', 'lu', 'bla', NULL, NULL, NULL, NULL),
(214, '2011-11-09 17:31:12', 'lZ', 'bla', NULL, NULL, NULL, NULL),
(215, '2011-11-09 17:31:13', 'lh', 'bla', NULL, NULL, NULL, NULL),
(216, '2011-11-09 17:31:13', 'lr', 'bla', NULL, NULL, NULL, NULL),
(217, '2011-11-09 17:31:13', 'lE', 'bla', NULL, NULL, NULL, NULL),
(218, '2011-11-09 17:31:13', 'lq', 'bla', NULL, NULL, NULL, NULL),
(219, '2011-11-09 17:31:14', 'lL', 'bla', NULL, NULL, NULL, NULL),
(220, '2011-11-09 17:31:14', 'l0', 'bla', NULL, NULL, NULL, NULL),
(221, '2011-11-09 17:31:14', 'l7', 'bla', NULL, NULL, NULL, NULL),
(222, '2011-11-09 17:31:14', 'lK', 'bla', NULL, NULL, NULL, NULL),
(223, '2011-11-09 17:31:14', 'lg', 'bla', NULL, NULL, NULL, NULL),
(224, '2011-11-09 17:31:14', 'lw', 'bla', NULL, NULL, NULL, NULL),
(225, '2011-11-09 17:31:40', 'lc', 'bla', NULL, NULL, NULL, NULL),
(226, '2011-11-09 17:31:41', 'lY', 'bla', NULL, NULL, NULL, NULL),
(227, '2011-11-09 17:31:41', 'lF', 'bla', NULL, NULL, NULL, NULL),
(228, '2011-11-09 17:31:41', 'lJ', 'bla', NULL, NULL, NULL, NULL),
(229, '2011-11-09 17:31:41', 'l3', 'bla', NULL, NULL, NULL, NULL),
(230, '2011-11-09 17:31:41', 'l4', 'bla', NULL, NULL, NULL, NULL),
(231, '2011-11-09 17:31:41', 'lG', 'bla', NULL, NULL, NULL, NULL),
(232, '2011-11-09 17:31:42', 'lB', 'bla', NULL, NULL, NULL, NULL),
(233, '2011-11-09 17:31:42', 'lN', 'bla', NULL, NULL, NULL, NULL),
(234, '2011-11-09 17:31:42', 'lf', 'bla', NULL, NULL, NULL, NULL),
(235, '2011-11-09 17:31:43', 'l8', 'bla', NULL, NULL, NULL, NULL),
(236, '2011-11-09 17:32:51', 'lU', 'bla', NULL, NULL, NULL, NULL),
(237, '2011-11-09 17:32:51', 'lV', 'bla', NULL, NULL, NULL, NULL),
(238, '2011-11-09 17:32:51', 'l6', 'bla', NULL, NULL, NULL, NULL),
(239, '2011-11-09 17:32:51', 'ln', 'bla', NULL, NULL, NULL, NULL),
(240, '2011-11-09 17:32:52', 'ly', 'bla', NULL, NULL, NULL, NULL),
(241, '2011-11-09 17:32:52', 'lv', 'bla', NULL, NULL, NULL, NULL),
(242, '2011-11-09 17:32:52', 'lQ', 'bla', NULL, NULL, NULL, NULL),
(243, '2011-11-09 17:32:53', 'lH', 'bla', NULL, NULL, NULL, NULL),
(244, '2011-11-09 17:32:53', 'ld', 'bla', NULL, NULL, NULL, NULL),
(245, '2011-11-09 17:32:53', 'l1', 'bla', NULL, NULL, NULL, NULL),
(246, '2011-11-09 17:32:53', 'lt', 'bla', NULL, NULL, NULL, NULL),
(247, '2011-11-09 18:09:46', 'lR', 'bla', NULL, NULL, NULL, NULL),
(248, '2011-11-09 18:33:40', 'DT', 'bla', NULL, NULL, NULL, NULL),
(249, '2011-11-09 18:49:52', 'Dp', 'bla', NULL, NULL, NULL, NULL),
(250, '2011-11-09 18:53:22', 'DA', 'bla', NULL, NULL, NULL, NULL),
(251, '2011-11-09 18:55:22', 'Dl', 'bla', NULL, NULL, NULL, NULL),
(252, '2011-11-09 18:57:39', 'DD', 'bla', NULL, NULL, NULL, NULL),
(253, '2011-11-09 18:58:37', 'Dx', 'bla', NULL, NULL, NULL, NULL),
(254, '2011-11-09 18:58:43', 'DW', 'bla', NULL, NULL, NULL, NULL),
(255, '2011-11-09 18:59:13', 'Di', 'bla', NULL, NULL, NULL, NULL),
(256, '2011-11-09 19:00:26', 'DO', 'bla', NULL, NULL, NULL, NULL),
(257, '2011-11-09 19:01:42', 'DC', 'bla', NULL, NULL, NULL, NULL),
(258, '2011-11-09 19:01:47', 'DI', 'bla', NULL, NULL, NULL, NULL),
(259, '2011-11-09 19:01:48', 'Dk', 'bla', NULL, NULL, NULL, NULL),
(260, '2011-11-09 19:02:36', 'D5', 'bla', NULL, NULL, NULL, NULL),
(261, '2011-11-09 19:02:38', 'D9', 'bla', NULL, NULL, NULL, NULL),
(262, '2011-11-09 19:02:39', 'Dm', 'bla', NULL, NULL, NULL, NULL),
(263, '2011-11-09 19:03:39', 'DS', 'bla', NULL, NULL, NULL, NULL),
(264, '2011-11-09 19:06:24', 'De', 'bla', NULL, NULL, NULL, NULL),
(265, '2011-11-09 19:06:30', 'DX', 'bla', NULL, NULL, NULL, NULL),
(266, '2011-11-09 19:07:48', 'D2', 'bla', NULL, NULL, NULL, NULL),
(267, '2011-11-09 19:07:51', 'Do', 'bla', NULL, NULL, NULL, NULL),
(268, '2011-11-09 19:18:25', 'DM', 'bla', NULL, NULL, NULL, NULL),
(269, '2011-11-09 19:19:06', 'Dz', 'bla', NULL, NULL, NULL, NULL),
(270, '2011-11-09 19:22:56', 'DP', 'bla', NULL, NULL, NULL, NULL),
(271, '2011-11-09 19:30:25', 'Dj', 'bla', NULL, NULL, NULL, NULL),
(272, '2011-11-09 19:30:55', 'Ds', 'bla', NULL, NULL, NULL, NULL),
(273, '2011-11-09 19:30:57', 'Db', 'bla', NULL, NULL, NULL, NULL),
(274, '2011-11-09 19:31:34', 'Du', 'bla', NULL, NULL, NULL, NULL),
(275, '2011-11-09 19:36:34', 'Da', 'bla', NULL, NULL, NULL, NULL),
(276, '2011-11-09 19:36:34', 'DZ', 'bla', NULL, NULL, NULL, NULL),
(277, '2011-11-09 19:36:35', 'Dh', 'bla', NULL, NULL, NULL, NULL),
(278, '2011-11-09 19:36:35', 'Dr', 'bla', NULL, NULL, NULL, NULL),
(279, '2011-11-09 19:36:35', 'DE', 'bla', NULL, NULL, NULL, NULL),
(280, '2011-11-09 19:36:36', 'Dq', 'bla', NULL, NULL, NULL, NULL),
(281, '2011-11-09 19:36:36', 'DL', 'bla', NULL, NULL, NULL, NULL),
(282, '2011-11-09 19:42:59', 'D0', 'bla', NULL, NULL, NULL, NULL),
(283, '2011-11-09 22:08:32', 'D7', 'bla', NULL, NULL, NULL, NULL),
(284, '2011-11-10 15:14:50', 'DK', 'bla', NULL, NULL, NULL, NULL),
(285, '2011-11-10 16:50:15', 'Dg', 'text/plain', NULL, NULL, NULL, NULL),
(286, '2011-11-10 16:51:58', 'Dw', 'text/javascript', NULL, NULL, NULL, NULL),
(287, '2011-11-10 16:58:52', 'Dc', 'text/x-diff', NULL, NULL, NULL, NULL),
(288, '2011-11-10 16:59:17', 'DY', 'text/x-diff', NULL, NULL, NULL, NULL),
(289, '2011-11-10 17:02:08', 'DF', 'text/x-java', NULL, NULL, NULL, NULL),
(290, '2011-11-10 18:05:27', 'DJ', 'text/plain', NULL, NULL, NULL, NULL),
(291, '2011-11-11 17:13:11', 'D3', 'text/x-java', NULL, NULL, NULL, NULL),
(292, '2011-11-11 17:13:20', 'D4', 'text/x-java', NULL, NULL, NULL, NULL),
(293, '2011-11-11 17:16:05', 'DG', 'text/plain', NULL, NULL, NULL, NULL),
(294, '2011-11-11 17:26:54', 'DB', 'text/plain', NULL, NULL, NULL, NULL),
(295, '2011-11-11 17:29:37', 'DN', 'text/plain', NULL, NULL, NULL, NULL),
(296, '2011-11-11 17:30:20', 'Df', 'text/plain', NULL, NULL, NULL, NULL),
(297, '2011-11-11 17:31:19', 'D8', 'text/plain', NULL, NULL, NULL, NULL),
(298, '2011-11-11 17:32:09', 'DU', 'text/plain', NULL, NULL, NULL, NULL),
(299, '2011-11-11 17:57:19', 'DV', 'text/plain', NULL, NULL, NULL, NULL),
(300, '2011-11-11 18:02:48', 'D6', 'text/plain', NULL, NULL, NULL, NULL),
(301, '2011-11-11 18:14:17', 'Dn', 'text/plain', NULL, NULL, NULL, NULL),
(302, '2011-11-11 18:14:36', 'Dy', 'text/plain', NULL, NULL, NULL, NULL),
(304, '2011-11-11 19:07:25', 'DQ', 'text/plain', NULL, 0, NULL, NULL),
(305, '2011-11-11 19:07:39', 'DH', 'text/plain', NULL, 0, NULL, NULL),
(306, '2011-11-11 19:08:11', 'Dd', 'text/plain', NULL, 0, NULL, NULL),
(307, '2011-11-11 19:09:00', 'D1', 'text/plain', NULL, 0, NULL, NULL),
(308, '2011-11-11 19:09:18', 'Dt', 'text/plain', NULL, 0, NULL, NULL),
(309, '2011-11-11 19:11:08', 'DR', 'text/plain', NULL, 0, NULL, NULL),
(310, '2011-11-11 19:11:17', 'xT', 'text/plain', NULL, 1, NULL, NULL),
(311, '2011-11-11 19:13:06', 'xp', 'text/x-java', NULL, 0, NULL, NULL),
(312, '2011-11-13 16:08:53', 'xA', 'text/plain', NULL, 1, NULL, NULL),
(313, '2011-11-13 16:26:51', 'xl', 'text/x-groovy', NULL, 0, NULL, NULL),
(314, '2011-11-13 16:34:31', 'xD', 'text/plain', NULL, 0, NULL, NULL),
(315, '2011-11-13 16:35:52', 'xx', 'text/plain', NULL, 0, '', NULL),
(316, '2011-11-13 16:49:31', 'xW', 'text/plain', NULL, 0, 'ciao', NULL),
(317, '2011-11-16 17:19:30', 'xi', 'text/plain', NULL, 0, '', NULL),
(318, '2011-11-18 19:20:34', 'xO', 'text/x-java', NULL, 0, 'ciao', NULL),
(319, '2011-11-18 23:35:45', 'xC', 'text/css', NULL, 1, '', NULL),
(320, '2011-11-25 14:22:26', 'xI', 'text/x-java', NULL, 0, 'ciao', NULL),
(321, '2011-11-25 14:30:44', 'xk', 'text/plain', NULL, 0, '', NULL),
(322, '2011-11-25 14:31:34', 'x5', 'text/plain', NULL, 0, '', NULL),
(323, '2011-11-25 14:31:58', 'x9', 'text/plain', NULL, 0, 'poi', NULL),
(324, '2011-11-25 14:39:01', 'xm', 'text/x-java', NULL, 0, 'asd', NULL),
(325, '2011-11-25 22:03:16', 'xS', 'text/x-java', NULL, 0, '', NULL);

-- --------------------------------------------------------

--
-- Struttura della tabella `inbox`
--

CREATE TABLE IF NOT EXISTS `inbox` (
  `idinbox` int(11) NOT NULL AUTO_INCREMENT,
  `since` datetime DEFAULT NULL,
  `boxes_idboxes` int(11) unsigned NOT NULL,
  `users_iduser` int(10) unsigned NOT NULL,
  `cursor_line` int(11) DEFAULT NULL,
  `cursor_column` int(11) DEFAULT NULL,
  PRIMARY KEY (`idinbox`),
  UNIQUE KEY `uniqueJoin` (`boxes_idboxes`,`users_iduser`),
  KEY `fk_inbox_boxes1` (`boxes_idboxes`),
  KEY `fk_inbox_users1` (`users_iduser`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=47 ;

--
-- Dump dei dati per la tabella `inbox`
--


-- --------------------------------------------------------

--
-- Struttura della tabella `messages`
--

CREATE TABLE IF NOT EXISTS `messages` (
  `idmessages` int(11) NOT NULL,
  `text` text,
  `time` timestamp NULL DEFAULT NULL,
  `iduser` int(10) unsigned NOT NULL,
  `idbox` int(11) unsigned NOT NULL,
  PRIMARY KEY (`idmessages`),
  KEY `fk_messages_users1` (`iduser`),
  KEY `fk_messages_boxes1` (`idbox`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dump dei dati per la tabella `messages`
--


-- --------------------------------------------------------

--
-- Struttura della tabella `operations`
--

CREATE TABLE IF NOT EXISTS `operations` (
  `idoperation` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `from_line` int(10) unsigned NOT NULL,
  `to_line` int(10) unsigned NOT NULL,
  `from_char` int(10) unsigned NOT NULL,
  `to_char` int(10) unsigned NOT NULL,
  `string` text NOT NULL,
  `iduser` int(10) unsigned NOT NULL,
  `boxes_idboxes` int(11) unsigned NOT NULL,
  PRIMARY KEY (`idoperation`) USING HASH,
  KEY `op_user` (`iduser`),
  KEY `op_box` (`boxes_idboxes`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

--
-- Dump dei dati per la tabella `operations`
--


-- --------------------------------------------------------

--
-- Struttura della tabella `revisions`
--

CREATE TABLE IF NOT EXISTS `revisions` (
  `idrevision` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `source` text,
  `idbox` int(11) unsigned NOT NULL,
  `rev` int(11) DEFAULT NULL,
  `lastoperation` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`idrevision`),
  UNIQUE KEY `idbbox_rev` (`idbox`,`rev`),
  KEY `fk_revisions_boxes` (`idbox`),
  KEY `fk_revisions_operations1` (`lastoperation`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=322 ;

--
-- Dump dei dati per la tabella `revisions`
--

INSERT INTO `revisions` (`idrevision`, `source`, `idbox`, `rev`, `lastoperation`) VALUES
(1, 'ciao', 16, 10, 0),
(2, 'ciao', 17, 10, 0),
(3, 'ciao', 18, 10, 0),
(4, 'ciao', 19, 10, 0),
(5, 'ciao', 20, 10, 0),
(6, 'ciao', 21, 10, 0),
(7, 'ciao', 22, 10, 0),
(8, 'ciao', 23, 10, 0),
(9, 'ciao', 24, 10, 0),
(10, 'ciao', 25, 10, 0),
(11, 'ciao', 26, 10, 0),
(12, 'ciao', 27, 10, 0),
(13, 'ciao', 28, 10, 0),
(14, 'ciao', 29, 10, 0),
(15, 'ciao', 30, 10, 0),
(16, 'ciao', 31, 10, 0),
(17, 'ciao', 32, 10, 0),
(18, 'ciao', 33, 10, 0),
(19, 'ciao', 34, 10, 0),
(20, 'ciao', 35, 10, 0),
(21, 'ciao', 36, 10, 0),
(22, 'ciao', 37, 10, 0),
(23, 'ciao', 38, 10, 0),
(24, 'ciao', 39, 10, 0),
(25, 'ciao', 40, 10, 0),
(26, 'ciao', 41, 10, 0),
(27, 'ciao', 42, 10, 0),
(28, 'ciao', 43, 10, 0),
(29, 'ciao', 44, 10, 0),
(30, 'ciao', 45, 10, 0),
(31, 'ciao', 46, 10, 0),
(32, 'ciao', 47, 10, 0),
(33, 'ciao', 48, 10, 0),
(34, 'ciao', 49, 10, 0),
(35, 'ciao', 50, 10, 0),
(36, 'ciao', 51, 10, 0),
(37, 'ciao', 52, 10, 0),
(38, 'ciao', 53, 10, 0),
(39, 'ciao', 54, 10, 0),
(40, 'ciao', 55, 10, 0),
(41, 'ciao', 56, 10, 0),
(42, 'ciao', 57, 10, 0),
(43, 'ciao', 58, 10, 0),
(44, 'ciao', 59, 10, 0),
(45, 'ciao', 60, 10, 0),
(46, 'ciao', 61, 10, 0),
(47, 'ciao', 62, 10, 0),
(48, 'ciao', 63, 10, 0),
(49, 'ciao', 64, 10, 0),
(50, 'ciao', 65, 10, 0),
(51, 'ciao', 66, 10, 0),
(52, 'ciao', 67, 10, 0),
(53, 'ciao', 68, 10, 0),
(54, 'ciao', 69, 10, 0),
(55, 'ciao', 70, 10, 0),
(56, 'ciao', 71, 10, 0),
(57, 'ciao', 72, 10, 0),
(58, 'ciao', 73, 10, 0),
(59, 'ciao', 74, 10, 0),
(60, 'ciao', 75, 10, 0),
(61, 'ciao', 76, 10, 0),
(62, 'ciao', 77, 10, 0),
(63, 'ciao', 78, 10, 0),
(64, 'ciao', 79, 10, 0),
(65, 'ciao', 80, 10, 0),
(66, 'ciao', 81, 10, 0),
(67, 'ciao', 82, 10, 0),
(68, 'ciao', 83, 10, 0),
(69, 'ciao', 84, 10, 0),
(70, 'ciao', 85, 10, 0),
(71, 'ciao', 86, 10, 0),
(72, 'ciao', 87, 10, 0),
(73, 'ciao', 88, 10, 0),
(74, 'ciao', 89, 10, 0),
(75, 'ciao', 90, 10, 0),
(76, 'ciao', 91, 10, 0),
(77, 'ciao', 92, 10, 0),
(78, 'ciao', 93, 10, 0),
(79, 'ciao', 94, 10, 0),
(80, 'ciao', 95, 10, 0),
(81, 'ciao', 96, 10, 0),
(82, 'ciao', 97, 10, 0),
(83, 'ciao', 98, 10, 0),
(84, 'ciao', 99, 10, 0),
(85, 'ciao', 100, 10, 0),
(86, 'ciao', 101, 10, 0),
(87, 'ciao', 102, 10, 0),
(88, 'ciao', 103, 10, 0),
(89, 'ciao', 104, 10, 0),
(90, 'ciao', 105, 10, 0),
(91, 'ciao', 106, 10, 0),
(92, 'ciao', 107, 10, 0),
(93, 'ciao', 108, 10, 0),
(94, 'ciao', 109, 10, 0),
(95, 'ciao', 110, 10, 0),
(96, 'ciao', 111, 10, 0),
(97, 'ciao', 112, 10, 0),
(98, 'ciao', 113, 10, 0),
(99, 'ciao', 114, 10, 0),
(100, 'ciao', 115, 10, 0),
(101, 'ciao', 116, 10, 0),
(102, 'ciao', 117, 10, 0),
(103, 'ciao', 118, 10, 0),
(104, 'ciao', 119, 10, 0),
(105, 'ciao', 120, 10, 0),
(106, 'ciao', 121, 10, 0),
(107, 'ciao', 122, 10, 0),
(108, 'ciao', 123, 10, 0),
(109, 'ciao', 124, 10, 0),
(110, 'ciao', 125, 10, 0),
(111, 'ciao', 126, 10, 0),
(112, 'ciao', 127, 10, 0),
(113, 'ciao', 128, 10, 0),
(114, 'ciao', 129, 10, 0),
(115, 'ciao', 130, 10, 0),
(116, 'ciao', 131, 10, 0),
(117, 'ciao', 132, 10, 0),
(118, 'ciao', 133, 10, 0),
(119, 'ciao', 134, 10, 0),
(120, 'ciao', 135, 10, 0),
(121, 'ciao', 136, 10, 0),
(122, 'ciao', 137, 10, 0),
(123, 'ciao', 138, 10, 0),
(124, 'ciao', 139, 10, 0),
(125, 'ciao', 140, 10, 0),
(126, 'ciao', 141, 10, 0),
(127, 'ciao', 142, 10, 0),
(128, 'ciao', 143, 10, 0),
(129, 'ciao', 144, 10, 0),
(130, 'ciao', 145, 10, 0),
(131, 'ciao', 146, 10, 0),
(132, 'ciao', 147, 10, 0),
(133, 'ciao', 148, 10, 0),
(134, 'ciao', 149, 10, 0),
(135, 'ciao', 150, 10, 0),
(136, 'ciao', 151, 10, 0),
(137, 'ciao', 152, 10, 0),
(138, 'ciao', 153, 10, 0),
(139, 'ciao', 154, 10, 0),
(140, 'ciao', 155, 10, 0),
(141, 'ciao', 156, 10, 0),
(142, 'ciao', 157, 10, 0),
(143, 'ciao', 158, 10, 0),
(144, 'ciao', 159, 10, 0),
(145, 'ciao', 160, 10, 0),
(146, 'ciao', 161, 10, 0),
(147, 'ciao', 162, 10, 0),
(148, 'ciao', 163, 10, 0),
(149, 'ciao', 164, 10, 0),
(150, 'ciao', 165, 10, 0),
(151, 'ciao', 166, 10, 0),
(152, 'ciao', 167, 10, 0),
(153, 'ciao', 168, 10, 0),
(155, 'ciao', 170, 10, 0),
(156, 'ciao', 171, 10, 0),
(158, 'ciao', 173, 10, 0),
(159, 'ciao', 174, 10, 0),
(160, 'ciao', 175, 10, 0),
(161, 'ciao', 176, 10, 0),
(165, 'ciao', 180, 10, 0),
(166, 'ciao', 181, 10, 0),
(167, 'ciao', 182, 10, 0),
(168, 'ciao', 183, 10, 0),
(169, 'ciao', 184, 10, 0),
(170, 'ciao', 185, 10, 0),
(171, 'ciao', 186, 10, 0),
(172, 'ciao', 187, 10, 0),
(173, 'ciao', 188, 10, 0),
(174, 'ciao', 189, 10, 0),
(175, 'ciao', 190, 10, 0),
(176, 'ciao', 191, 10, 0),
(177, 'ciao', 192, 10, 0),
(178, 'ciao', 193, 10, 0),
(179, 'ciao', 194, 10, 0),
(180, 'ciao', 195, 10, 0),
(182, 'ciao', 197, 10, 0),
(183, 'ciao', 198, 10, 0),
(184, 'ciao', 199, 10, 0),
(185, 'ciao', 200, 10, 0),
(186, 'ciao', 201, 10, 0),
(187, 'ciao', 202, 10, 0),
(189, 'ciao', 204, 10, 0),
(192, 'ciao', 207, 10, 0),
(194, 'ciao', 209, 10, 0),
(196, 'ciao', 211, 10, 0),
(197, 'ciao', 212, 10, 0),
(199, 'ciao', 214, 10, 0),
(200, 'ciao', 215, 10, 0),
(201, 'ciao', 216, 10, 0),
(202, 'ciao', 217, 10, 0),
(203, 'ciao', 218, 10, 0),
(204, 'ciao', 219, 10, 0),
(205, 'ciao', 220, 10, 0),
(206, 'ciao', 221, 10, 0),
(207, 'ciao', 222, 10, 0),
(208, 'ciao', 223, 10, 0),
(209, 'ciao', 224, 10, 0),
(210, 'ciao', 225, 10, 0),
(211, 'ciao', 226, 10, 0),
(212, 'ciao', 227, 10, 0),
(213, 'ciao', 228, 10, 0),
(214, 'ciao', 229, 10, 0),
(215, 'ciao', 230, 10, 0),
(216, 'ciao', 231, 10, 0),
(217, 'ciao', 232, 10, 0),
(218, 'ciao', 233, 10, 0),
(219, 'ciao', 234, 10, 0),
(220, 'ciao', 235, 10, 0),
(221, 'ciao', 236, 10, 0),
(222, 'ciao', 237, 10, 0),
(223, 'ciao', 238, 10, 0),
(224, 'ciao', 239, 10, 0),
(225, 'ciao', 240, 10, 0),
(226, 'ciao', 241, 10, 0),
(227, 'ciao', 242, 10, 0),
(228, 'ciao', 243, 10, 0),
(229, 'ciao', 244, 10, 0),
(230, 'ciao', 245, 10, 0),
(231, 'ciao', 246, 10, 0),
(232, 'ciao', 247, 10, 0),
(233, 'ciao', 248, 10, 0),
(234, 'ciao', 249, 10, 0),
(235, 'ciao', 250, 10, 0),
(236, 'ciao', 251, 10, 0),
(237, 'ciao', 252, 10, 0),
(238, 'ciao', 253, 10, 0),
(239, 'ciao', 254, 10, 0),
(240, 'ciao', 255, 10, 0),
(241, 'ciao', 256, 10, 0),
(242, 'ciao', 257, 10, 0),
(243, 'ciao', 258, 10, 0),
(244, 'ciao', 259, 10, 0),
(245, 'ciao', 260, 10, 0),
(246, 'ciao', 261, 10, 0),
(247, 'ciao', 262, 10, 0),
(248, 'ciao', 263, 10, 0),
(249, 'ciao', 264, 0, 0),
(250, 'ciao', 265, 0, 0),
(251, 'ciao', 266, 0, 0),
(252, 'ciao', 267, 0, 0),
(253, 'ciao', 268, 0, 0),
(254, 'ciao', 269, 0, 0),
(255, 'ciao', 270, 0, 0),
(256, 'ciao', 271, 0, 0),
(257, 'ciao', 272, 0, 0),
(258, 'ciao', 273, 0, 0),
(259, 'ciao', 274, 0, 0),
(260, 'bla bla bla', 248, 11, 0),
(261, 'ciao', 275, 0, 0),
(262, 'bla bla bla', 248, 12, 0),
(263, 'ciao', 276, 0, 0),
(264, 'bla bla bla', 248, 13, 0),
(265, 'ciao', 277, 0, 0),
(266, 'bla bla bla', 248, 14, 0),
(267, 'ciao', 278, 0, 0),
(268, 'bla bla bla', 248, 15, 0),
(269, 'ciao', 279, 0, 0),
(270, 'bla bla bla', 248, 16, 0),
(271, 'ciao', 280, 0, 0),
(272, 'bla bla bla', 248, 17, 0),
(273, 'ciao', 281, 0, 0),
(274, 'bla bla bla', 248, 18, 0),
(275, 'ciao', 282, 0, 0),
(276, 'bla bla bla', 248, 19, 0),
(277, 'ciao', 283, 0, 0),
(278, 'bla bla bla', 248, 20, 0),
(279, 'ciao', 284, 0, 0),
(280, 'bla bla bla', 248, 21, 0),
(281, '', 285, 0, 0),
(282, 'ciaociaocodv', 286, 0, 0),
(283, 'dfdsdfsdf', 287, 0, 0),
(284, 'dfdsdfsdf', 288, 0, 0),
(285, 'package cc.sourcebox.beans;\nimport javax.ejb.Remote;\n\nimport cc.sourcebox.beans.exceptions.BoxNotFoundException;\n\n@Remote\npublic interface BoxBeanRemote {\n\n	public String make(String language, String body, String password);\n	\n	public boolean save(String alias, String body) throws BoxNotFoundException;\n	\n}\n', 289, 0, 0),
(286, 'ewewewe', 290, 0, 0),
(287, 'package cc.sourcebox.web.pages;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport freemarker.template.Configuration;\nimport freemarker.template.Template;\nimport freemarker.template.TemplateException;\n\n@WebServlet(urlPatterns="")\npublic class Index extends HttpServlet {\n\n	private Configuration cfg; \n	\n	@Override\n	public void init() throws ServletException {\n		cfg = new Configuration();\n        cfg.setServletContextForTemplateLoading(\n                getServletContext(), "WEB-INF/templates");\n        \n    \n	}\n	\n	\n	@Override\n	protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		// TODO Auto-generated method stub\n		doGet(req, resp);\n	}\n	\n	\n	@Override\n	protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		\n		HttpSession session = req.getSession();\n		\n		\n		PrintWriter out = resp.getWriter();\n\n		Template t = cfg.getTemplate("index.ftl");\n		\n		\n		resp.setContentType("text/html; charset=" + t.getEncoding());\n        \n        // Merge the data-model and the template\n        try {\n            t.process(new HashMap(), out);\n        } catch (TemplateException e) {\n            throw new ServletException(\n                    "Error while processing FreeMarker template", e);\n        }\n		\n		\n		out.close();\n	}\n	\n}\n', 291, 0, 0),
(288, 'package cc.sourcebox.web.pages;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport freemarker.template.Configuration;\nimport freemarker.template.Template;\nimport freemarker.template.TemplateException;\n\n@WebServlet(urlPatterns="")\npublic class Index extends HttpServlet {\n\n	private Configuration cfg; \n	\n	@Override\n	public void init() throws ServletException {\n		cfg = new Configuration();\n        cfg.setServletContextForTemplateLoading(\n                getServletContext(), "WEB-INF/templates");\n        \n    \n	}\n	\n	\n	@Override\n	protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		// TODO Auto-generated method stub\n		doGet(req, resp);\n	}\n	\n	\n	@Override\n	protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		\n		HttpSession session = req.getSession();\n		\n		\n		PrintWriter out = resp.getWriter();\n\n		Template t = cfg.getTemplate("index.ftl");\n		\n		\n		resp.setContentType("text/html; charset=" + t.getEncoding());\n        \n        // Merge the data-model and the template\n        try {\n            t.process(new HashMap(), out);\n        } catch (TemplateException e) {\n            throw new ServletException(\n                    "Error while processing FreeMarker template", e);\n        }\n		\n		\n		out.close();\n	}\n	\n}\n', 292, 0, 0),
(289, 'dsdsdad', 293, 0, 0),
(290, 'ddd', 294, 0, 0),
(291, 'fdfdfg', 295, 0, 0),
(292, '', 296, 0, 0),
(293, '', 297, 0, 0),
(294, '', 298, 0, 0),
(295, '', 299, 0, 0),
(296, '', 300, 0, 0),
(297, 'tertertretretertret', 301, 0, 0),
(298, 'tfytrytryyty', 302, 0, 0),
(299, '', 304, 0, NULL),
(300, '', 305, 0, NULL),
(301, '', 306, 0, NULL),
(302, '', 307, 0, NULL),
(303, '', 308, 0, NULL),
(304, '', 309, 0, NULL),
(305, '', 310, 0, NULL),
(306, 'package cc.sourcebox.web.servlet;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.net.URL;\nimport java.util.HashMap;\n\nimport javax.ejb.EJB;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport cc.sourcebox.beans.BoxBeanRemote;\nimport cc.sourcebox.web.utils.EncodeDecode;\n\n@WebServlet(urlPatterns = "/store")\npublic class Store extends HttpServlet {\n\n	/**\n	 * \n	 */\n	private static final long serialVersionUID = 1L;\n\n	@Override\n	protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		// TODO Auto-generated method stub\n		doGet(req, resp);\n	}\n\n	@EJB(mappedName = "SourceBoxLogicEAR/BoxBean/remote")\n	private BoxBeanRemote bbr;\n\n	@Override\n	protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		resp.setContentType("application/json");\n		PrintWriter out = resp.getWriter();\n\n		HashMap<String, Object> result = new HashMap<String, Object>();\n\n		String captcha = "" + req.getSession().getAttribute("captcha");\n\n		if (/*!captcha.equals(req.getParameter("captcha"))*/false) {\n			System.err.println("Captcha error: " + captcha + "!="\n					+ req.getParameter("captcha"));\n\n			result.put("success", false);\n			result.put("message", "Wrong security code...");\n\n		} else {\n\n			String language = req.getParameter("language").toString();\n			String code = req.getParameter("code").toString();\n			String password = (req.getParameter("is_private").equals("true")) ? req\n					.getParameter("password") : null;	\n					\n			boolean readonly = req.getParameter("readonly").equals("true");\n\n			String alias = bbr.make(language, code, password, readonly);\n\n			System.out.println("Language: " + language);\n			System.out.println("Code: " + code);\n			System.out.println("Password: " + password);\n			System.out.println("ReadOnly: " + readonly);\n\n			System.out.println("BOX ALIAS: " + alias);\n\n			\n			URL reconstructedURL = new URL(req.getScheme(),\n					req.getServerName(),\n					req.getServerPort(),\n					req.getContextPath()+"/@"+alias);\n			\n			result.put("url", reconstructedURL);\n			result.put("success", true);\n			result.put("alias", alias);\n		}\n		out.print(EncodeDecode.get().encode(result));\n\n		out.close();\n	}\n\n}\n', 311, 0, NULL),
(307, 'vddffdf', 311, 1, NULL),
(308, 'rtrtretretrtrtrettre', 312, 0, NULL),
(309, 'gdfggfdfg', 313, 0, NULL),
(310, 'fgdfgdfgdfg', 314, 0, NULL),
(311, 'fsddfsfs', 315, 0, NULL),
(312, 'fdsfsdf', 316, 0, NULL),
(313, 'jjjjjjjjjjjjj', 317, 0, NULL),
(314, 'package cc.sourcebox.web.servlet;\n\nimport java.util.HashMap;\n\nimport javax.ejb.EJB;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\n\nimport cc.sourcebox.beans.BoxBeanRemote;\n\n@WebServlet(urlPatterns="/boxenv")\npublic class BoxEnvironmentInfo extends SourceBoxServlet {\n\n	/**\n	 * \n	 */\n	private static final long serialVersionUID = 1172396791580431424L;\n\n	@EJB(mappedName = "SourceBoxLogicEAR/BoxBean/remote")\n	private BoxBeanRemote boxbean;\n\n	\n	@Override\n	public void process(HttpServletRequest req, HttpSession session,\n			HashMap<String, Object> output) throws Exception {\n\n\n		String alias = req.getParameter("alias");\n		\n		output.put("isPrivate", boxbean.isPrivate(alias));\n		output.put("inbox", session.getAttribute("BOX_"+alias)!=null);\n		output.put("loggedAs", session.getAttribute("nick"));\n		\n	}\n	\n\n\n}\n', 318, 0, NULL),
(315, '@CHARSET "ISO-8859-1";\n\n/* .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}*/\n.activeline {\n	background: #f0fcff !important;\n}\n\n.error{ color: red; }\n\n.fullscreen {\n	display: block;\n	position: absolute;\n	top: 0;\n	left: 0;\n	width: 100%;\n	height: 100%;\n	z-index: 999;\n	margin: 0;\n	padding: 0;\n	border: 0px solid #BBBBBB;\n	opacity: 1;\n	background-image: url(''../images/mega_bg.png'');\n	background-repeat: no-repeat;\n	background-attachment: fixed;\n	background-position: center;\n	/*margin-top: 50px;*/\n}\n\n#save-status {\n	top: 5px ;\n	position: fixed ;\n	right: 25px;\n	z-index: 1000 ;\n	color:#AAAAAA;\n}\n\n\n#save-loading {\n	top: 200px ;\n	position: fixed ;\n	left: 50%;\n	z-index: 1000 ;\n}\n\n\n\n.text {\n	font-size: 12px!important;\n}\n\n.invisible-table{ margin: 0px; !important}\n\n.ui-widget {\n	font-size: 12px!important;\n}\n\n.chat {\n	width: 300px;\n	bottom: 0;\n	direction: ltr;\n	position: fixed;\n	right: 15px;\n	z-index: 1001;\n}\n\n.chat-button {\n	text-align: center;\n	border-color: #999;\n	border-style: solid;\n	border-width: 1px 1px 1px 1px;\n	color: #333;\n	background: #EEEEEE;\n	display: block;\n	height: 15px;\n	font-weight: bold;\n	padding: 4px 5px;\n	position: relative;\n	z-index: 1000;\n	text-decoration: none;\n}\n\n.chat-button:hover {\n	background: #BBBBBB;\n}\n\n#comments-list {\n	height: 300px;\n	overflow: auto;\n	background-color: #FFFFFF;\n	border: 1px solid #cccccc;\n}\n\ntextarea#comment {\n	width: 290px;\n	height: 60px;\n	border: 0px;\n	font-size: 120%;\n	font-family: Tahoma, sans-serif;\n	background-color: #FFFFFF;\n	resize: none;\n	outline: none;\n	overflow: auto;\n}\n\n#comments-text-wrapper {\n	background-color: #FFFFFF;\n	border-left: 1px solid #cccccc;\n	border-right: 1px solid #cccccc;\n}\n\n#comment-top {\n	height: 18px;\n	/*font-size: 120%;*/\n	text-align: center;\n	color: white;\n	border-top-left-radius: 6px;\n	border-top-right-radius: 6px;\n}', 319, 0, NULL),
(316, 'package cc.sourcebox.web.pages;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport freemarker.template.Configuration;\nimport freemarker.template.Template;\nimport freemarker.template.TemplateException;\n\n@WebServlet(urlPatterns="")\npublic class Index extends HttpServlet {\n\n	private Configuration cfg; \n	\n	@Override\n	public void init() throws ServletException {\n		cfg = new Configuration();\n        cfg.setServletContextForTemplateLoading(\n                getServletContext(), "WEB-INF/templates");\n        \n    \n	}\n	\n	\n	@Override\n	protected void doPost(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		// TODO Auto-generated method stub\n		doGet(req, resp);\n	}\n	\n	\n	@Override\n	protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n			throws ServletException, IOException {\n		\n		HttpSession session = req.getSession(true);\n		PrintWriter out = resp.getWriter();\n		HashMap<String, Object> params = new HashMap<String, Object>();\n		Template t = null;\n\n		\n		\n		if (req.getParameter("alias")==null)\n			t = cfg.getTemplate("index.ftl");\n		else {\n			params.put("alias", req.getParameter("alias"));\n			t = cfg.getTemplate("view.ftl");\n		}\n        \n		\n		try {\n            t.process(params, out);\n        } catch (TemplateException e) {\n            throw new ServletException("Error while processing FreeMarker template", e);\n        }\n		\n		\n		out.close();\n	}\n	\n}\n', 320, 0, NULL),
(317, 'dfdfdfdsfdsfsdfsdfdf', 321, 0, NULL),
(318, 'bhjkl', 322, 0, NULL),
(319, 'gdfgdfgddf', 323, 0, NULL),
(320, 'rrdtgrdtrdtre', 324, 0, NULL),
(321, 'package cc.sourcebox.beans;\n\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.ejb.EJB;\nimport javax.ejb.LocalBean;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.Query;\n\nimport cc.sourcebox.beans.exceptions.BoxNotFoundException;\nimport cc.sourcebox.dto.InsertObject;\nimport cc.sourcebox.entities.Box;\nimport cc.sourcebox.entities.Revision;\n\n/**\n * Session Bean implementation class BoxBean\n */\n@Stateless\n@LocalBean\npublic class BoxBean implements BoxBeanRemote, BoxBeanLocal {\n\n	@PersistenceContext(name="SourceBoxEntities")\n	EntityManager em;\n	\n	@EJB\n	UrlHelperLocal urlHelper;\n	\n	@EJB\n	UsersManagerBeanLocal usersMgr;\n	\n	\n    /**\n     * Default constructor. \n     */\n    public BoxBean() {\n        // TODO Auto-generated constructor stub\n    }\n\n	@Override\n	public String make(String language, String body, String password, Boolean readonly) {\n\n		\n		Box box = new Box();\n		\n		/********\n		 * Temporary alias because the field does not allow NULL value\n		 * The alias is computed starting from the id generated from the database\n		 */\n		box.setAlias(""+System.currentTimeMillis());\n		\n		/*******\n		 * Box content\n		 */\n		box.setLanguage(language);\n		box.setReadonly((readonly)?1:0);\n		box.setPassword((password==null)?"":password);\n		\n		/******\n		 * First revision\n		 */\n		Revision rev = new Revision();\n		rev.setSource(body);\n		rev.setBox(box);\n\n		List<Revision> rl = new ArrayList<Revision>(1);\n		rl.add(rev);\n		\n		box.setRevisions(rl);\n		\n		\n		/*******\n		 * Save to db\n		 */\n		em.persist(box);\n		\n		\n		/********\n		 * Now the db has generated a box id \n		 */\n		box.setAlias(urlHelper.idToAlias(box.getIdboxes()));\n		\n		\n		return box.getAlias();\n	}\n\n	@Override\n	public void save(String alias, String body) throws BoxNotFoundException {\n\n		Query query = em.createQuery("SELECT max(r.rev), b from Revision r inner join r.box b where b.alias=:alias");\n		query.setParameter("alias", alias);\n		\n		if (query.getResultList().size()<1) throw new BoxNotFoundException();\n		\n			\n		Object[] data = (Object[]) query.getResultList().get(0);\n		\n		int revNumber = (Integer)data[0]+1;\n		\n		Revision rev = new Revision();\n		rev.setRev(revNumber);\n		rev.setSource(body);\n		rev.setBox((Box)data[1]);\n\n\n		em.persist(rev);\n\n	}\n\n	@Override\n	public Revision get(int userId, String alias, String password) throws BoxNotFoundException {\n		//String query = null;\n\n		//if (force)\n		//	query = "SELECT r from Revision r join r.box b where b.alias=:alias order by r.rev desc";\n		//else\n			//query = "SELECT r from Revision r join r.box b where b.alias=:alias and b.password=:pwd order by r.rev desc";\n		String query = "SELECT r from Revision r join r.box b where (b.alias=:alias and b.password=:pwd)" +\n				"OR b.idboxes = (select b.idboxes from Inbox i join i.user u join i.box b where u.iduser = :iduser and b.alias=:alias)" +\n				" order by r.rev desc";\n		\n		//select b.idboxes from Inbox i join i.user u join i.box b where u.iduser = :iduser and b.alias=:alias\n		\n		Query boxQuery = em.createQuery(query);\n		\n		/************\n		 * I need only 1 revision. The revisions are ordered by rev number (desc)\n		 */\n		boxQuery.setMaxResults(1);\n		boxQuery.setParameter("alias", alias);\n		boxQuery.setParameter("iduser", userId);\n		boxQuery.setParameter("pwd", (password==null)?"":password);\n		try {	\n			\n			Revision lastRev = (Revision)boxQuery.getSingleResult();\n			usersMgr.joinBox(userId, lastRev.getBox());\n			return lastRev;\n		}\n		catch (Exception e) {\n			throw new BoxNotFoundException();\n		}\n		\n		\n	}\n\n	@Override\n	public Boolean isPrivate(String alias) throws BoxNotFoundException {\n		Query boxQuery = em.createQuery("SELECT b.password from Box b where b.alias=:alias" );\n		\n		System.out.println(alias);\n		boxQuery.setParameter("alias", alias);\n		\n		try {\n			String pwd = boxQuery.getSingleResult().toString();\n			return (!pwd.equals(""));\n		} catch (Exception e) {\n			throw new BoxNotFoundException();\n		}\n		\n	}\n\n	@Override\n	public void edit(String alias, int userID, List<InsertObject> inserts)\n			throws BoxNotFoundException {\n		System.out.println(inserts);\n		\n	}\n\n\n	\n	\n	\n\n}\n', 325, 0, NULL);

-- --------------------------------------------------------

--
-- Struttura della tabella `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `iduser` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL,
  `last_activity` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `color` varchar(10) DEFAULT '333399',
  PRIMARY KEY (`iduser`),
  KEY `lastactivity` (`last_activity`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=59 ;

--
-- Dump dei dati per la tabella `users`
--


--
-- Limiti per le tabelle scaricate
--

--
-- Limiti per la tabella `inbox`
--
ALTER TABLE `inbox`
  ADD CONSTRAINT `fk_inbox_users1` FOREIGN KEY (`users_iduser`) REFERENCES `users` (`iduser`) ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_inbox_boxes1` FOREIGN KEY (`boxes_idboxes`) REFERENCES `boxes` (`idboxes`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limiti per la tabella `messages`
--
ALTER TABLE `messages`
  ADD CONSTRAINT `fk_messages_boxes1` FOREIGN KEY (`idbox`) REFERENCES `boxes` (`idboxes`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_messages_users1` FOREIGN KEY (`iduser`) REFERENCES `users` (`iduser`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limiti per la tabella `operations`
--
ALTER TABLE `operations`
  ADD CONSTRAINT `fk_operations_boxes` FOREIGN KEY (`boxes_idboxes`) REFERENCES `boxes` (`idboxes`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_operations_users1` FOREIGN KEY (`iduser`) REFERENCES `users` (`iduser`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limiti per la tabella `revisions`
--
ALTER TABLE `revisions`
  ADD CONSTRAINT `fk_revisions_boxes` FOREIGN KEY (`idbox`) REFERENCES `boxes` (`idboxes`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_revisions_operations1` FOREIGN KEY (`lastoperation`) REFERENCES `operations` (`idoperation`) ON DELETE NO ACTION ON UPDATE NO ACTION;
